<!DOCTYPE html>
<html lang="pt-BR">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>Cadastro Usuário</title>
<style>
  body { font-family: Arial, sans-serif; margin: 2rem; }
  label, select, input, button { display: block; margin: 0.5rem 0; width: 300px; padding: 0.5rem; }
  button { cursor: pointer; }
  .msg { margin-top: 1rem; font-weight: bold; }
</style>
</head>
<body>

<h2>Cadastro de Usuário</h2>

<form id="cadastroForm">
  <label for="email">E-mail:</label>
  <input type="email" id="email" required />

  <label for="senha">Senha:</label>
  <input type="password" id="senha" required />

  <label for="tipo">Tipo de usuário:</label>
  <select id="tipo" required>
    <option value="">Selecione</option>
    <option value="admin">Administrador</option>
    <option value="frota">Frota</option>
    <option value="manutencao">Manutenção</option>
  </select>

  <button type="submit">Cadastrar</button>
</form>

<div class="msg" id="msg"></div>

<script type="module">
  import { initializeApp } from "https://www.gstatic.com/firebasejs/9.22.0/firebase-app.js";
  import { getAuth, createUserWithEmailAndPassword } from "https://www.gstatic.com/firebasejs/9.22.0/firebase-auth.js";
  import { getFirestore, doc, setDoc } from "https://www.gstatic.com/firebasejs/9.22.0/firebase-firestore.js";

  const firebaseConfig = {
    apiKey: "AIzaSyCte0cRbPuoZioxTgDSg6eJ3c1TC3SEvPs",
    authDomain: "checklist-frota-a4b3b.firebaseapp.com",
    projectId: "checklist-frota-a4b3b",
    storageBucket: "checklist-frota-a4b3b.appspot.com",
    messagingSenderId: "428306058067",
    appId: "1:428306058067:web:1f610791e68c5d75ecefa6"
  };

  const app = initializeApp(firebaseConfig);
  const auth = getAuth(app);
  const db = getFirestore(app);

  const form = document.getElementById('cadastroForm');
  const msg = document.getElementById('msg');

  form.addEventListener('submit', async (e) => {
    e.preventDefault();

    const email = form.email.value.trim();
    const senha = form.senha.value;
    const tipo = form.tipo.value;

    if (!email || !senha || !tipo) {
      msg.textContent = "Preencha todos os campos!";
      return;
    }

    try {
      // Cria usuário no Authentication
      const userCredential = await createUserWithEmailAndPassword(auth, email, senha);
      const uid = userCredential.user.uid;

      // Salva o tipo no Firestore
      await setDoc(doc(db, "usuarios", uid), { tipo });

      msg.style.color = "green";
      msg.textContent = "Usuário criado com sucesso!";

      form.reset();
    } catch (error) {
      msg.style.color = "red";
      msg.textContent = "Erro: " + error.message;
    }
  });
</script>

</body>
</html>
